#
# ~/.bashrc
#

# ---------- Completion ----------
. ~/.config/completion/git-prompt.sh
. ~/.config/completion/dotdrop.sh-completion.bash

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# pywal theme
(cat ~/.cache/wal/sequences &)

# ---------- Bash Prompt  ----------
# get current branch in git repo
function parse_git_branch() {
	BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
	if [ ! "${BRANCH}" == "" ]
	then
		STAT=`parse_git_dirty`
		echo "[${BRANCH}${STAT}]"
	else
		echo ""
	fi
}

# get current status of git repo
function parse_git_dirty {
	status=`git status 2>&1 | tee`
	dirty=`echo -n "${status}" 2> /dev/null | grep "modified:" &> /dev/null; echo "$?"`
	untracked=`echo -n "${status}" 2> /dev/null | grep "Untracked files" &> /dev/null; echo "$?"`
	ahead=`echo -n "${status}" 2> /dev/null | grep "Your branch is ahead of" &> /dev/null; echo "$?"`
	newfile=`echo -n "${status}" 2> /dev/null | grep "new file:" &> /dev/null; echo "$?"`
	renamed=`echo -n "${status}" 2> /dev/null | grep "renamed:" &> /dev/null; echo "$?"`
	deleted=`echo -n "${status}" 2> /dev/null | grep "deleted:" &> /dev/null; echo "$?"`
	bits=''
	if [ "${renamed}" == "0" ]; then
		bits=">${bits}"
	fi
	if [ "${ahead}" == "0" ]; then
		bits="*${bits}"
	fi
	if [ "${newfile}" == "0" ]; then
		bits="+${bits}"
	fi
	if [ "${untracked}" == "0" ]; then
		bits="?${bits}"
	fi
	if [ "${deleted}" == "0" ]; then
		bits="x${bits}"
	fi
	if [ "${dirty}" == "0" ]; then
		bits="!${bits}"
	fi
	if [ ! "${bits}" == "" ]; then
		echo " ${bits}"
	else
		echo ""
	fi
}

#export PS1="\u@\h:\W\`parse_git_branch\`\\$ "
export PS1="\[\e[32m\]\u\[\e[m\]\[\e[32m\]@\[\e[m\]\[\e[32m\]\h\[\e[m\]\[\e[32m\]:\[\e[m\]\[\e[32m\]\W\[\e[m\]\[\e[36m\]\`parse_git_branch\`\[\e[m\]\[\e[32m\]\\$\[\e[m\] "

ex ()
{
	if [ -f $1 ]; then
		case $1 in
			*.tar.bz2)  tar xjf $1  ;;
			*.tar.gz)   tar xzf $!  ;;
			*.bz2)      bunzip2 $1  ;;
			*.rar)      unrar x $1  ;;
			*.gz)       gunzip $1   ;;
			*.tar)      tar xf $1   ;;
			*.tbz2)     tar xjf $1  ;;
			*.tgz)      tar xzf $1  ;;
			*.zip)      unzip $1    ;;
			*.Z)        uncompress $1 ;;
			*.7z)       7z x $1     ;;
			*.deb)      ar x $1     ;;
			*.tar.xz)   tar xf $1   ;;
			*.tar.zst)  unzstd $1   ;;
			*)          echo "'$1' cannot be extracted via ex()" ;;
		esac
	else
		echo "'$1' is not a valid file"
	fi
}

# ---------- Aliases ----------
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias c='clear'
alias lsl='ls -l'
alias lsa='ls -a'

# common dirs
alias dev='cd ~/dev'

# program aliases
alias vimrc='vim ~/.vimrc'
alias bashrc='vim ~/.bashrc'
alias dotdrop='~/dots/dotdrop.sh --cfg=~/dots/config.yaml' 

alias ls='ls --color=auto'

# confirm before overwriting
alias cp='cp -i'
alias mv='mv -i'
alias rm='rm -i'

# git
alias g='git'
alias branch='git branch'
alias checkout='git checkout'
alias clone='git clone'
alias fetch='git fetch'
alias status='git status'
alias glog='git log --graph --decorate --oneline'

# ---------- Command Options  ----------
# set vim as default editor
export EDITOR=vim

# PATH exports
export PATH="${PATH}:{HOME}/.local/bin"
export LD_LIBRARY_PATH=/usr/lib64
